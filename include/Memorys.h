#ifndef MEMORYS_H
#define MEMORYS_H

class Memorys {
    private:
        const uint8_t characterSet[CHIP8_TOTAL_CHARACTER_SET] = {
            0xF0, 0x90, 0x90, 0x90, 0xF0,
            0x20, 0x60, 0x20, 0x20, 0x70,
            0xF0, 0x10, 0xF0, 0x80, 0xF0,
            0xF0, 0x10, 0xF0, 0x10, 0xF0,
            0x90, 0x90, 0xF0, 0x10, 0x10,
            0xF0, 0x80, 0xF0, 0x10, 0xF0,
            0xF0, 0x80, 0xF0, 0x90, 0xF0,
            0xF0, 0x10, 0x20, 0x40, 0x40,
            0xF0, 0x90, 0xF0, 0x90, 0xF0,
            0xF0, 0x90, 0xF0, 0x10, 0xF0,
            0xF0, 0x90, 0xF0, 0x90, 0x90,
            0xE0, 0x90, 0xE0, 0x90, 0xE0,
            0xF0, 0x80, 0x80, 0x80, 0xF0,
            0xE0, 0x90, 0x90, 0x90, 0xe0,
            0xF0, 0x80, 0xF0, 0x80, 0xF0, 
            0xF0, 0x80, 0xF0, 0x80, 0x80
        };

    public:
        uint8_t memory[CHIP8_MEMORY_SIZE];

    public:
        Memorys(/* args */);
        ~Memorys();

        static void memoryBounds(int index);
        
        void setMemory(int index, uint8_t value);
        uint8_t getMemory(int index);
        uint16_t getShort(int index);

};

#endif